[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/ast/Children.js",
    "content": "import _children_exhaust from './_children_exhaust.js';\n\nexport default class Children {\n\t/**\n\t * @param {AsyncIterableIterator} iterator\n\t * @param {number} length\n\t */\n\tconstructor(iterator, length) {\n\t\tthis.iterator = iterator;\n\t\tthis.length = length;\n\t}\n\n\tasync *[Symbol.asyncIterator]() {\n\t\tfor await (const node of this.iterator) {\n\t\t\tyield node;\n\t\t\tif (node.type === 'node') await _children_exhaust(node.children);\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ast/Children.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Children",
    "memberof": "src/ast/Children.js",
    "static": true,
    "longname": "src/ast/Children.js~Children",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ast/Children.js",
    "importStyle": "Children",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ast/Children.js~Children",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ast/Children.js~Children#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "AsyncIterableIterator"
        ],
        "spread": false,
        "optional": false,
        "name": "iterator",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "iterator",
    "memberof": "src/ast/Children.js~Children",
    "static": false,
    "longname": "src/ast/Children.js~Children#iterator",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "length",
    "memberof": "src/ast/Children.js~Children",
    "static": false,
    "longname": "src/ast/Children.js~Children#length",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "[Symbol.asyncIterator]",
    "memberof": "src/ast/Children.js~Children",
    "generator": true,
    "async": true,
    "static": false,
    "longname": "src/ast/Children.js~Children#[Symbol.asyncIterator]",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/ast/_children_exhaust.js",
    "content": "import anyIterator from '../util/anyIterator.js';\n\n/**\n * Exhausts the input children iterator.\n *\n * @param {Iterator} children - The input children iterator.\n *\n */\nexport default async function _children_exhaust(children) {\n\t// For await ( const child of children ) {\n\t// if ( child.type === 'node' ) await _children_exhaust( child.children ) ;\n\t// }\n\n\tconst stack = [anyIterator(children)];\n\n\twhile (stack.length > 0) {\n\t\tconst it = stack.pop();\n\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst {done, value} = await it.next();\n\n\t\tif (!done) {\n\t\t\tstack.push(it);\n\n\t\t\tconst child = value;\n\n\t\t\tif (child.type === 'node') {\n\t\t\t\tconst grandchildren = anyIterator(child.children);\n\t\t\t\tstack.push(grandchildren);\n\t\t\t}\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ast/_children_exhaust.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "_children_exhaust",
    "memberof": "src/ast/_children_exhaust.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/ast/_children_exhaust.js~_children_exhaust",
    "access": "private",
    "export": true,
    "importPath": "@formal-language/grammar/src/ast/_children_exhaust.js",
    "importStyle": "_children_exhaust",
    "description": "Exhausts the input children iterator.",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Iterator"
        ],
        "spread": false,
        "optional": false,
        "name": "children",
        "description": "The input children iterator."
      }
    ],
    "return": null
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/ast/flatten.js",
    "content": "import anyIterator from '../util/anyIterator.js';\n\nfunction getCount(object) {\n\tif (object instanceof Function || object.length === undefined)\n\t\treturn Number.POSITIVE_INFINITY;\n\treturn object.length;\n}\n\nexport default async function* flatten(root) {\n\t// Assert root.type === 'node'\n\n\tconst stack = [\n\t\t{\n\t\t\t// No need to use the exhaustive iterator since flatten exhausts the whole subtree\n\t\t\tchildren: anyIterator(root.children),\n\t\t\tcount: getCount(root.children),\n\t\t},\n\t];\n\n\twhile (stack.length > 0) {\n\t\tconst tree = stack.pop();\n\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst {done, value} = await tree.children.next();\n\n\t\tif (!done) {\n\t\t\tif (--tree.count > 0)\n\t\t\t\t// Prunes left side of the tree\n\t\t\t\tstack.push(tree);\n\n\t\t\tconst child = value;\n\n\t\t\tif (child.type === 'leaf') yield child;\n\t\t\telse {\n\t\t\t\tconst it = {\n\t\t\t\t\tchildren: anyIterator(child.children),\n\t\t\t\t\tcount: getCount(child.children),\n\t\t\t\t};\n\n\t\t\t\tstack.push(it);\n\t\t\t}\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ast/flatten.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "getCount",
    "memberof": "src/ast/flatten.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ast/flatten.js~getCount",
    "access": "public",
    "export": false,
    "importPath": "@formal-language/grammar/src/ast/flatten.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "flatten",
    "memberof": "src/ast/flatten.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/ast/flatten.js~flatten",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ast/flatten.js",
    "importStyle": "flatten",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "root",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/ast/index.js",
    "content": "import Children from './Children.js';\nimport _children_exhaust from './_children_exhaust.js';\nimport cmap from './cmap.js';\nimport flatten from './flatten.js';\nimport map from './map.js';\nimport materialize from './materialize.js';\nimport rmap from './rmap.js';\nimport transform from './transform.js';\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default {\n\tChildren,\n\t_children_exhaust,\n\tcmap,\n\tflatten,\n\tmap,\n\tmaterialize,\n\trmap,\n\ttransform,\n};\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ast/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/ast/map.js",
    "content": "import assert from 'assert';\nimport Children from './Children.js';\nimport cmap from './cmap.js';\n\n/**\n * Applies a given callable to each of the child of a given children async iterable.\n *\n * @param {Function} callable - The callable to use.\n * @param {AsyncIterable} children - The input children.\n * @returns {AsyncIterable}\n */\nexport default function map(callable, children) {\n\tassert(children !== undefined);\n\tconst iterator = cmap(callable, children)[Symbol.asyncIterator]();\n\n\treturn new Children(iterator, undefined);\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ast/map.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "map",
    "memberof": "src/ast/map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ast/map.js~map",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ast/map.js",
    "importStyle": "map",
    "description": "Applies a given callable to each of the child of a given children async iterable.",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AsyncIterable}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callable",
        "description": "The callable to use."
      },
      {
        "nullable": null,
        "types": [
          "AsyncIterable"
        ],
        "spread": false,
        "optional": false,
        "name": "children",
        "description": "The input children."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/ast/materialize.js",
    "content": "import anyIterator from '../util/anyIterator.js';\n\nexport default async function materialize(root) {\n\t// Assert root.type === 'node'\n\n\tconst parents = [\n\t\t{\n\t\t\ttype: 'node',\n\t\t\tnonterminal: root.nonterminal,\n\t\t\tproduction: root.production,\n\t\t\tchildren: [],\n\t\t},\n\t];\n\n\tconst children = [anyIterator(root.children)];\n\n\twhile (true) {\n\t\tconst todo = children.pop();\n\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst {done, value} = await todo.next();\n\n\t\tif (done) {\n\t\t\tif (children.length === 0) return parents.pop();\n\n\t\t\tconst tree = parents.pop();\n\t\t\tconst parent = parents.pop();\n\t\t\tparent.children.push(tree);\n\t\t\tparents.push(parent);\n\t\t} else {\n\t\t\tconst child = value;\n\n\t\t\tif (child.type === 'leaf') {\n\t\t\t\tconst tree = parents.pop();\n\t\t\t\ttree.children.push(child);\n\t\t\t\tparents.push(tree);\n\t\t\t\tchildren.push(todo);\n\t\t\t} else {\n\t\t\t\tconst grandchildren = anyIterator(child.children);\n\n\t\t\t\tconst newchild = {\n\t\t\t\t\ttype: 'node',\n\t\t\t\t\tnonterminal: child.nonterminal,\n\t\t\t\t\tproduction: child.production,\n\t\t\t\t\tchildren: [],\n\t\t\t\t};\n\n\t\t\t\tparents.push(newchild);\n\t\t\t\tchildren.push(todo, grandchildren);\n\t\t\t}\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ast/materialize.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "materialize",
    "memberof": "src/ast/materialize.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/ast/materialize.js~materialize",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ast/materialize.js",
    "importStyle": "materialize",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "root",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/ast/rmap.js",
    "content": "// Import _children_exhaust from './_children_exhaust' ;\n\n/**\n * Applies a given callable to each part of a given grammar rule (given as an iterable).\n *\n * @param {Function} callable - The callable to use.\n * @param {Iterable} rule - The input grammar rule.\n * @returns {AsyncIterator}\n */\nexport default async function* rmap(callable, rule) {\n\tfor (const part of rule) {\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst node = await callable(part);\n\t\tyield node;\n\t\t// If ( node.type === 'node' ) await _children_exhaust( node.children ) ;\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ast/rmap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "rmap",
    "memberof": "src/ast/rmap.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/ast/rmap.js~rmap",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ast/rmap.js",
    "importStyle": "rmap",
    "description": "Applies a given callable to each part of a given grammar rule (given as an iterable).",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AsyncIterator}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callable",
        "description": "The callable to use."
      },
      {
        "nullable": null,
        "types": [
          "Iterable"
        ],
        "spread": false,
        "optional": false,
        "name": "rule",
        "description": "The input grammar rule."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "src/ast/transform.js",
    "content": "export default async function transform(tree, match, ctx) {\n\t// Assert tree.type === 'node'\n\tconst {nonterminal, production} = tree;\n\treturn match[nonterminal][production](tree, match, ctx);\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ast/transform.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "transform",
    "memberof": "src/ast/transform.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/ast/transform.js~transform",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ast/transform.js",
    "importStyle": "transform",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "tree",
        "types": [
          "*"
        ]
      },
      {
        "name": "match",
        "types": [
          "*"
        ]
      },
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/error/LookaheadMismatchError.js",
    "content": "import SyntaxError from './SyntaxError.js';\n\nexport default class LookaheadMismatchError extends SyntaxError {\n\tconstructor(lookahead, expected) {\n\t\tsuper(\n\t\t\t`Syntax error at ${lookahead.position} (${\n\t\t\t\tlookahead.terminal\n\t\t\t}), expected one of ${JSON.stringify(expected)}.`,\n\t\t);\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/error/LookaheadMismatchError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "class",
    "name": "LookaheadMismatchError",
    "memberof": "src/error/LookaheadMismatchError.js",
    "static": true,
    "longname": "src/error/LookaheadMismatchError.js~LookaheadMismatchError",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/error/LookaheadMismatchError.js",
    "importStyle": "LookaheadMismatchError",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/error/SyntaxError.js~SyntaxError"
    ]
  },
  {
    "__docId__": 70,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/error/LookaheadMismatchError.js~LookaheadMismatchError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/error/LookaheadMismatchError.js~LookaheadMismatchError#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/error/SyntaxError.js",
    "content": "export default class SyntaxError extends Error {}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/error/SyntaxError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "class",
    "name": "SyntaxError",
    "memberof": "src/error/SyntaxError.js",
    "static": true,
    "longname": "src/error/SyntaxError.js~SyntaxError",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/error/SyntaxError.js",
    "importStyle": "SyntaxError",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/error/UnexpectedEndOfFileError.js",
    "content": "import SyntaxError from './SyntaxError.js';\n\nexport default class UnexpectedEndOfFileError extends SyntaxError {\n\tconstructor(expected) {\n\t\tsuper(\n\t\t\t`Syntax error because of unexpected end of file, expected one of ${JSON.stringify(\n\t\t\t\texpected,\n\t\t\t)}.`,\n\t\t);\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/error/UnexpectedEndOfFileError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "class",
    "name": "UnexpectedEndOfFileError",
    "memberof": "src/error/UnexpectedEndOfFileError.js",
    "static": true,
    "longname": "src/error/UnexpectedEndOfFileError.js~UnexpectedEndOfFileError",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/error/UnexpectedEndOfFileError.js",
    "importStyle": "UnexpectedEndOfFileError",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/error/SyntaxError.js~SyntaxError"
    ]
  },
  {
    "__docId__": 75,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/error/UnexpectedEndOfFileError.js~UnexpectedEndOfFileError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/error/UnexpectedEndOfFileError.js~UnexpectedEndOfFileError#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "src/error/index.js",
    "content": "import LookaheadMismatchError from './LookaheadMismatchError.js';\nimport SyntaxError from './SyntaxError.js';\nimport UnexpectedEndOfFileError from './UnexpectedEndOfFileError.js';\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default {\n\tLookaheadMismatchError,\n\tSyntaxError,\n\tUnexpectedEndOfFileError,\n};\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/error/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "src/grammar/EW.js",
    "content": "const EW = '';\nexport default EW;\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/grammar/EW.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "EW",
    "memberof": "src/grammar/EW.js",
    "static": true,
    "longname": "src/grammar/EW.js~EW",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/grammar/EW.js",
    "importStyle": "EW",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/grammar/Grammar.js",
    "content": "import expandobject from './expandobject.js';\nimport alphabet from './alphabet.js';\n\nexport default class Grammar {\n\tconstructor({root, start, eof, productions}) {\n\t\tthis.root = String(root);\n\t\tthis.start = String(start);\n\t\tthis.eof = eof;\n\t\tthis.productions = expandobject(productions);\n\t\tthis._alphabet = null;\n\t}\n\n\talphabet() {\n\t\tif (this._alphabet === null) this._alphabet = alphabet(this.productions);\n\t\treturn this._alphabet;\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/grammar/Grammar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "class",
    "name": "Grammar",
    "memberof": "src/grammar/Grammar.js",
    "static": true,
    "longname": "src/grammar/Grammar.js~Grammar",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/grammar/Grammar.js",
    "importStyle": "Grammar",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 81,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/grammar/Grammar.js~Grammar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/grammar/Grammar.js~Grammar#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "root",
    "memberof": "src/grammar/Grammar.js~Grammar",
    "static": false,
    "longname": "src/grammar/Grammar.js~Grammar#root",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "member",
    "name": "start",
    "memberof": "src/grammar/Grammar.js~Grammar",
    "static": false,
    "longname": "src/grammar/Grammar.js~Grammar#start",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "eof",
    "memberof": "src/grammar/Grammar.js~Grammar",
    "static": false,
    "longname": "src/grammar/Grammar.js~Grammar#eof",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "productions",
    "memberof": "src/grammar/Grammar.js~Grammar",
    "static": false,
    "longname": "src/grammar/Grammar.js~Grammar#productions",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "_alphabet",
    "memberof": "src/grammar/Grammar.js~Grammar",
    "static": false,
    "longname": "src/grammar/Grammar.js~Grammar#_alphabet",
    "access": "private",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "alphabet",
    "memberof": "src/grammar/Grammar.js~Grammar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/grammar/Grammar.js~Grammar#alphabet",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/grammar/_expandproduction.js",
    "content": "function _makenode(typ, arg) {\n\tswitch (typ) {\n\t\tcase '&':\n\t\t\treturn {type: 'node', nonterminal: arg};\n\t\tcase '=':\n\t\t\treturn {type: 'leaf', terminal: arg};\n\t\tdefault:\n\t\t\tthrow new Error(`${typ} is not a valid type`);\n\t}\n}\n\nexport default function* _expandproduction(production) {\n\tfor (const part of production) {\n\t\tif (typeof part === 'string') yield _makenode(part[0], part.slice(1));\n\t\telse if (typeof part === 'number') yield _makenode('&', String(part));\n\t\telse yield part;\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/grammar/_expandproduction.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "_makenode",
    "memberof": "src/grammar/_expandproduction.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/grammar/_expandproduction.js~_makenode",
    "access": "private",
    "export": false,
    "importPath": "@formal-language/grammar/src/grammar/_expandproduction.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "typ",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"terminal\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "_expandproduction",
    "memberof": "src/grammar/_expandproduction.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/grammar/_expandproduction.js~_expandproduction",
    "access": "private",
    "export": true,
    "importPath": "@formal-language/grammar/src/grammar/_expandproduction.js",
    "importStyle": "_expandproduction",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "production",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "src/grammar/alphabet.js",
    "content": "import EW from './EW.js';\n\nexport default function alphabet(productions) {\n\tconst abc = new Set();\n\n\tfor (const unit of productions.values()) {\n\t\tfor (const rule of unit.values()) {\n\t\t\tif (rule.length === 0) abc.add(EW);\n\t\t\telse\n\t\t\t\tfor (const part of rule)\n\t\t\t\t\tif (part.type === 'leaf') abc.add(part.terminal);\n\t\t}\n\t}\n\n\treturn abc;\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/grammar/alphabet.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "alphabet",
    "memberof": "src/grammar/alphabet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/grammar/alphabet.js~alphabet",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/grammar/alphabet.js",
    "importStyle": "alphabet",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "productions",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "file",
    "name": "src/grammar/expandobject.js",
    "content": "import {list} from '@iterable-iterator/list';\n\nimport _expandproduction from './_expandproduction.js';\n\n/**\n * @param {Record<string,any>} productions\n * @return {IterableIterator<[any,Map<any,any>]>}\n */\nfunction* _expandproductions(productions) {\n\tfor (const key in productions) {\n\t\tif (Object.prototype.hasOwnProperty.call(productions, key)) {\n\t\t\tyield [key, list(_expandproduction(productions[key]))];\n\t\t}\n\t}\n}\n\n/**\n * @param {object} object\n * @return {IterableIterator<[any,Map<any,any>]>}\n */\nfunction* _expandobject(object) {\n\tfor (const nonterminal in object) {\n\t\tif (Object.prototype.hasOwnProperty.call(object, nonterminal)) {\n\t\t\tyield [nonterminal, new Map(_expandproductions(object[nonterminal]))];\n\t\t}\n\t}\n}\n\nexport default function expandobject(object) {\n\treturn new Map(_expandobject(object));\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/grammar/expandobject.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "_expandproductions",
    "memberof": "src/grammar/expandobject.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/grammar/expandobject.js~_expandproductions",
    "access": "private",
    "export": false,
    "importPath": "@formal-language/grammar/src/grammar/expandobject.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Record<string,any>"
        ],
        "spread": false,
        "optional": false,
        "name": "productions",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IterableIterator<[any,Map<any,any>]>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "_expandobject",
    "memberof": "src/grammar/expandobject.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/grammar/expandobject.js~_expandobject",
    "access": "private",
    "export": false,
    "importPath": "@formal-language/grammar/src/grammar/expandobject.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IterableIterator<[any,Map<any,any>]>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "expandobject",
    "memberof": "src/grammar/expandobject.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/grammar/expandobject.js~expandobject",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/grammar/expandobject.js",
    "importStyle": "expandobject",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "src/grammar/from.js",
    "content": "import Grammar from './Grammar.js';\n\nexport default function from(object) {\n\treturn new Grammar(object);\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/grammar/from.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "from",
    "memberof": "src/grammar/from.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/grammar/from.js~from",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/grammar/from.js",
    "importStyle": "from",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/grammar/index.js",
    "content": "import EW from './EW.js';\nimport Grammar from './Grammar.js';\nimport _expandproduction from './_expandproduction.js';\nimport alphabet from './alphabet.js';\nimport expandobject from './expandobject.js';\nimport from from './from.js';\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default {\n\tEW,\n\tGrammar,\n\t_expandproduction,\n\talphabet,\n\texpandobject,\n\tfrom,\n};\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/grammar/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "src/index.js",
    "content": "export {default as ast} from './ast/index.js';\nexport {default as error} from './error/index.js';\nexport {default as grammar} from './grammar/index.js';\nexport {default as ll1} from './ll1/index.js';\nexport {default as util} from './util/index.js';\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "src/ll1/Parser.js",
    "content": "import compile from './compile.js';\nimport parse from './parse.js';\n\nexport default class Parser {\n\tconstructor(grammar) {\n\t\tthis.grammar = grammar;\n\t\tthis._table = null;\n\t}\n\n\t// First ( rule ) {\n\n\t// }\n\n\t// follow ( rule ) {\n\n\t// }\n\n\ttable() {\n\t\tif (this._table === null) this._table = compile(this.grammar.productions);\n\t\treturn this._table;\n\t}\n\n\tparse(tape) {\n\t\tconst table = this.table();\n\t\treturn parse(\n\t\t\tthis.grammar.root,\n\t\t\tthis.grammar.start,\n\t\t\tthis.grammar.eof,\n\t\t\tthis.grammar.productions,\n\t\t\ttable,\n\t\t\ttape,\n\t\t);\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/Parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "class",
    "name": "Parser",
    "memberof": "src/ll1/Parser.js",
    "static": true,
    "longname": "src/ll1/Parser.js~Parser",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ll1/Parser.js",
    "importStyle": "Parser",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 104,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ll1/Parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ll1/Parser.js~Parser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "grammar",
    "memberof": "src/ll1/Parser.js~Parser",
    "static": false,
    "longname": "src/ll1/Parser.js~Parser#grammar",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "_table",
    "memberof": "src/ll1/Parser.js~Parser",
    "static": false,
    "longname": "src/ll1/Parser.js~Parser#_table",
    "access": "private",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "table",
    "memberof": "src/ll1/Parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ll1/Parser.js~Parser#table",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "parse",
    "memberof": "src/ll1/Parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ll1/Parser.js~Parser#parse",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "tape",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "src/ll1/_children_next_lazy.js",
    "content": "import LookaheadMismatchError from '../error/LookaheadMismatchError.js';\nimport UnexpectedEndOfFileError from '../error/UnexpectedEndOfFileError.js';\nimport _parse_lazy from './_parse_lazy.js';\n\n/**\n * Get next child of table-driven predictive lazy parsing.\n *\n * @param {Object} eof - The end-of-file symbol.\n * @param {Map} productions - The ll1 productions.\n * @param {Map} table - The symbol table.\n * @param {Tape} tape - The tape from which to read the symbols from.\n * @param {Object} expected - The expected node.\n * @returns {Promise<object>} A node.\n */\nexport default async function _children_next_lazy(\n\teof,\n\tproductions,\n\ttable,\n\ttape,\n\texpected,\n) {\n\tconst lookahead = await tape.read();\n\n\tif (expected.type === 'leaf') {\n\t\tif (lookahead === tape.eof) {\n\t\t\tif (expected.terminal === eof) return expected;\n\t\t\tthrow new UnexpectedEndOfFileError([expected.terminal]);\n\t\t} else if (lookahead.terminal === expected.terminal) return lookahead;\n\t\telse throw new LookaheadMismatchError(lookahead, [expected.terminal]);\n\t}\n\n\ttape.unread(lookahead);\n\n\tconst router = table.get(expected.nonterminal);\n\n\tconst next = router.get(lookahead === tape.eof ? eof : lookahead.terminal);\n\n\tif (next === undefined) {\n\t\tconst error =\n\t\t\tlookahead === tape.eof\n\t\t\t\t? new UnexpectedEndOfFileError([...router.keys()])\n\t\t\t\t: new LookaheadMismatchError(lookahead, [...router.keys()]);\n\t\tthrow error;\n\t} else\n\t\treturn _parse_lazy(\n\t\t\teof,\n\t\t\tproductions,\n\t\t\ttable,\n\t\t\tproductions.get(expected.nonterminal).get(next),\n\t\t\ttape,\n\t\t\texpected.nonterminal,\n\t\t\tnext,\n\t\t);\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/_children_next_lazy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "_children_next_lazy",
    "memberof": "src/ll1/_children_next_lazy.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/ll1/_children_next_lazy.js~_children_next_lazy",
    "access": "private",
    "export": true,
    "importPath": "@formal-language/grammar/src/ll1/_children_next_lazy.js",
    "importStyle": "_children_next_lazy",
    "description": "Get next child of table-driven predictive lazy parsing.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<object>} A node."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "eof",
        "description": "The end-of-file symbol."
      },
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "productions",
        "description": "The ll1 productions."
      },
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "table",
        "description": "The symbol table."
      },
      {
        "nullable": null,
        "types": [
          "Tape"
        ],
        "spread": false,
        "optional": false,
        "name": "tape",
        "description": "The tape from which to read the symbols from."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "expected",
        "description": "The expected node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "A node."
    }
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/ll1/_compile.js",
    "content": "import {map} from '@iterable-iterator/map';\nimport {filter} from '@iterable-iterator/filter';\nimport {_chain} from '@iterable-iterator/chain';\nimport {next} from '@iterable-iterator/next';\nimport {iter} from '@iterable-iterator/iter';\n\nimport alphabet from '../grammar/alphabet.js';\nimport EW from '../grammar/EW.js';\n\nimport first from './first.js';\nimport _first from './_first.js';\nimport _follow from './_follow.js';\n\n/**\n * Generates the rows of the predictive parsing table for a grammar.\n * Corresponds to Algorithm 4.31 in Dragon Book (2006) on page 224.\n *\n * @param {Map} productions\n * @returns {Iterable}\n */\nexport default function* _compile(productions) {\n\tconst abc = alphabet(productions);\n\n\tconst phi = _first(productions);\n\tconst pho = _follow(phi, productions);\n\n\tconst FIRST = (rule) => first(phi, rule);\n\n\tconst dflt = {}; // Dummy object\n\n\tfor (const [A, rules] of productions) {\n\t\tconst m = map(\n\t\t\t(a) => [\n\t\t\t\ta,\n\t\t\t\tnext(\n\t\t\t\t\t// eslint-disable-next-line new-cap\n\t\t\t\t\titer(filter((r) => FIRST(rules.get(r)).has(EW), rules.keys())),\n\t\t\t\t\tdflt,\n\t\t\t\t),\n\t\t\t],\n\t\t\tfilter((a) => pho.get(A).has(a) && !phi.get(A).has(a), abc),\n\t\t);\n\n\t\tconst n = map(\n\t\t\t(a) => [\n\t\t\t\ta,\n\t\t\t\tnext(\n\t\t\t\t\t// eslint-disable-next-line new-cap\n\t\t\t\t\titer(filter((r) => FIRST(rules.get(r)).has(a), rules.keys())),\n\t\t\t\t\tdflt,\n\t\t\t\t),\n\t\t\t],\n\t\t\tfilter((a) => a !== EW, abc),\n\t\t);\n\n\t\tyield [A, new Map(filter(([_k, v]) => v !== dflt, _chain([m, n])))];\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/_compile.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "_compile",
    "memberof": "src/ll1/_compile.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/ll1/_compile.js~_compile",
    "access": "private",
    "export": true,
    "importPath": "@formal-language/grammar/src/ll1/_compile.js",
    "importStyle": "_compile",
    "description": "Generates the rows of the predictive parsing table for a grammar.\nCorresponds to Algorithm 4.31 in Dragon Book (2006) on page 224.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Iterable}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "productions",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/ll1/_follow.js",
    "content": "import {map} from '@iterable-iterator/map';\nimport {filter} from '@iterable-iterator/filter';\nimport {enumerate} from '@iterable-iterator/zip';\n\nimport setaddall from '../util/setaddall.js';\n\nimport EW from '../grammar/EW.js';\nimport first from './first.js';\n\n/**\n * Computes the FOLLOW table for all nonterminals.\n *\n * @param {Map} FIRST - The FIRST table as computed by {@link ll1#_first}\n * @param {Map} productions - The productions map.\n * @returns {Map} The FOLLOW table.\n */\nexport default function _follow(FIRST, productions) {\n\tconst FOLLOW = new Map(map((i) => [i, new Set()], productions.keys()));\n\n\tconst couldbelast = new Map(map((i) => [i, new Set()], productions.keys()));\n\n\tfor (const [A, rules] of productions) {\n\t\tfor (const rule of rules.values()) {\n\t\t\tfor (const [pos, B] of enumerate(rule)) {\n\t\t\t\tif (B.type === 'leaf') continue;\n\t\t\t\tconst fi = first(FIRST, rule.slice(pos + 1));\n\t\t\t\tif (fi.has(EW)) couldbelast.get(A).add(B.nonterminal);\n\t\t\t\tsetaddall(\n\t\t\t\t\tFOLLOW.get(B.nonterminal),\n\t\t\t\t\tfilter((x) => x !== EW, fi),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tlet updated = true;\n\twhile (updated) {\n\t\tupdated = false;\n\t\tfor (const A of productions.keys()) {\n\t\t\tfor (const B of couldbelast.get(A)) {\n\t\t\t\tupdated = setaddall(FOLLOW.get(B), FOLLOW.get(A)) || updated;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn FOLLOW;\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/_follow.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "_follow",
    "memberof": "src/ll1/_follow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ll1/_follow.js~_follow",
    "access": "private",
    "export": true,
    "importPath": "@formal-language/grammar/src/ll1/_follow.js",
    "importStyle": "_follow",
    "description": "Computes the FOLLOW table for all nonterminals.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Map} The FOLLOW table."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "FIRST",
        "description": "The FIRST table as computed by {@link ll1#_first}"
      },
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "productions",
        "description": "The productions map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Map"
      ],
      "spread": false,
      "description": "The FOLLOW table."
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "src/ll1/_parse_lazy.js",
    "content": "import rmap from '../ast/rmap.js';\nimport Children from '../ast/Children.js';\n\nimport _children_next_lazy from './_children_next_lazy.js';\n\n/**\n * Table-driven predictive lazy parsing.\n *\n * @param {Object} eof - The end-of-file symbol.\n * @param {Map} productions - The ll1 productions.\n * @param {Map} table - The symbol table.\n * @param {Array} rule - The production rule in use.\n * @param {Tape} tape - The tape from which to read the symbols from.\n * @param {String} nonterminal - The nonterminal that produced `rule`.\n * @param {String} production - The production that corresponds to `rule`.\n * @returns {Object} The root node of the parsed tree.\n */\nexport default function _parse_lazy(\n\teof,\n\tproductions,\n\ttable,\n\trule,\n\ttape,\n\tnonterminal,\n\tproduction,\n) {\n\tconst shallow_materialize = async (expected) =>\n\t\t_children_next_lazy(eof, productions, table, tape, expected);\n\n\tconst iterator = rmap(shallow_materialize, rule)[Symbol.asyncIterator]();\n\n\treturn {\n\t\ttype: 'node',\n\t\tnonterminal,\n\t\tproduction,\n\t\tchildren: new Children(iterator, rule.length),\n\t};\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/_parse_lazy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "_parse_lazy",
    "memberof": "src/ll1/_parse_lazy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ll1/_parse_lazy.js~_parse_lazy",
    "access": "private",
    "export": true,
    "importPath": "@formal-language/grammar/src/ll1/_parse_lazy.js",
    "importStyle": "_parse_lazy",
    "description": "Table-driven predictive lazy parsing.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} The root node of the parsed tree."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "eof",
        "description": "The end-of-file symbol."
      },
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "productions",
        "description": "The ll1 productions."
      },
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "table",
        "description": "The symbol table."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "rule",
        "description": "The production rule in use."
      },
      {
        "nullable": null,
        "types": [
          "Tape"
        ],
        "spread": false,
        "optional": false,
        "name": "tape",
        "description": "The tape from which to read the symbols from."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nonterminal",
        "description": "The nonterminal that produced `rule`."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "production",
        "description": "The production that corresponds to `rule`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The root node of the parsed tree."
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/ll1/audit.js",
    "content": "import {map} from '@iterable-iterator/map';\nimport {next} from '@iterable-iterator/next';\nimport {iter} from '@iterable-iterator/iter';\nimport {filter} from '@iterable-iterator/filter';\n\nimport EW from '../grammar/EW.js';\nimport _first from './_first.js';\nimport _follow from './_follow.js';\nimport first from './first.js';\n\nconst mapDuplicates = (rules) => {\n\tconst candidates = new Map();\n\tfor (const [key, first] of rules) {\n\t\tfor (const f of first) {\n\t\t\tif (candidates.has(f)) candidates.get(f).push(key);\n\t\t\telse candidates.set(f, [key]);\n\t\t}\n\t}\n\n\treturn candidates;\n};\n\nconst reportDuplicates = function* (collisions) {\n\tfor (const [f, rules] of collisions.entries()) {\n\t\tif (rules.length >= 2) {\n\t\t\tyield {f, rules};\n\t\t}\n\t}\n};\n\nconst duplicates = (rules) => reportDuplicates(mapDuplicates(rules));\n\nconst REASON_FIRST = 0;\nconst REASON_FOLLOW = 1;\n\nclass Reason {\n\tconstructor(reason, A, what) {\n\t\tthis.reason = reason;\n\t\tthis.A = A;\n\t\tthis.what = what;\n\t}\n}\n\n/**\n * List all reasons why a given grammar is not ll(1).\n *\n * @param {Grammar} grammar\n * @returns {IterableIterator<any>}\n */\nexport default function* audit({productions}) {\n\tconst phi = _first(productions);\n\n\tconst FIRST = (rule) => first(phi, rule);\n\n\t// Dragon Book (2006) page 224: For every A, a, b such that A => a | b\n\t// ``... FIRST(a) and FIRST(b) are disjoint sets.''\n\tfor (const [A, rules] of productions.entries()) {\n\t\tconst firsts = map(\n\t\t\t// eslint-disable-next-line new-cap\n\t\t\t([key, rule]) => [key, FIRST(rule)],\n\t\t\trules.entries(),\n\t\t);\n\t\tfor (const hit of duplicates(firsts)) {\n\t\t\tyield new Reason(REASON_FIRST, A, hit);\n\t\t}\n\t}\n\n\t//   And ``... if the empty\n\t//   word is in FIRST(b), then FIRST(a) and FOLLOW(A) are disjoint sets,\n\t//   and likewise if the empty word is in FIRST(a).''\n\n\tconst pho = _follow(phi, productions);\n\n\tconst FOLLOW = (A) => pho.get(A);\n\n\tconst dflt = {}; // Dummy object\n\n\tfor (const [A, rules] of productions) {\n\t\tconst found = next(\n\t\t\t// eslint-disable-next-line new-cap\n\t\t\titer(filter(([_key, rule]) => FIRST(rule).has(EW), rules.entries())),\n\t\t\tdflt,\n\t\t);\n\n\t\tif (found === dflt) continue;\n\n\t\tconst [yieldsEWkey, yieldsEW] = found;\n\n\t\tfor (const [key, rule] of rules.entries()) {\n\t\t\tif (rule === yieldsEW) continue;\n\n\t\t\tconst firsts = [\n\t\t\t\t// eslint-disable-next-line new-cap\n\t\t\t\t[yieldsEWkey, FOLLOW(A)],\n\t\t\t\t// eslint-disable-next-line new-cap\n\t\t\t\t[key, FIRST(rule)],\n\t\t\t];\n\t\t\tfor (const hit of duplicates(firsts)) {\n\t\t\t\tyield new Reason(REASON_FOLLOW, A, hit);\n\t\t\t}\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/audit.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "mapDuplicates",
    "memberof": "src/ll1/audit.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ll1/audit.js~mapDuplicates",
    "access": "public",
    "export": false,
    "importPath": "@formal-language/grammar/src/ll1/audit.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "rules",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "reportDuplicates",
    "memberof": "src/ll1/audit.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/ll1/audit.js~reportDuplicates",
    "access": "public",
    "export": false,
    "importPath": "@formal-language/grammar/src/ll1/audit.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "collisions",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "duplicates",
    "memberof": "src/ll1/audit.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ll1/audit.js~duplicates",
    "access": "public",
    "export": false,
    "importPath": "@formal-language/grammar/src/ll1/audit.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "rules",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "REASON_FIRST",
    "memberof": "src/ll1/audit.js",
    "static": true,
    "longname": "src/ll1/audit.js~REASON_FIRST",
    "access": "public",
    "export": false,
    "importPath": "@formal-language/grammar/src/ll1/audit.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "REASON_FOLLOW",
    "memberof": "src/ll1/audit.js",
    "static": true,
    "longname": "src/ll1/audit.js~REASON_FOLLOW",
    "access": "public",
    "export": false,
    "importPath": "@formal-language/grammar/src/ll1/audit.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "class",
    "name": "Reason",
    "memberof": "src/ll1/audit.js",
    "static": true,
    "longname": "src/ll1/audit.js~Reason",
    "access": "public",
    "export": false,
    "importPath": "@formal-language/grammar/src/ll1/audit.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 125,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ll1/audit.js~Reason",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ll1/audit.js~Reason#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "reason",
    "memberof": "src/ll1/audit.js~Reason",
    "static": false,
    "longname": "src/ll1/audit.js~Reason#reason",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "A",
    "memberof": "src/ll1/audit.js~Reason",
    "static": false,
    "longname": "src/ll1/audit.js~Reason#A",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "what",
    "memberof": "src/ll1/audit.js~Reason",
    "static": false,
    "longname": "src/ll1/audit.js~Reason#what",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "audit",
    "memberof": "src/ll1/audit.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/ll1/audit.js~audit",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ll1/audit.js",
    "importStyle": "audit",
    "description": "List all reasons why a given grammar is not ll(1).",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{IterableIterator<any>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Grammar"
        ],
        "spread": false,
        "optional": false,
        "name": "grammar",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IterableIterator<any>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 130,
    "kind": "file",
    "name": "src/ll1/compile.js",
    "content": "import _compile from './_compile.js';\n\n/**\n * Compiles the predictive parsing table for a grammar.\n * Corresponds to Algorithm 4.31 in Dragon Book (2006) on page 224.\n *\n * @param {Map} productions\n * @returns {Map}\n */\nexport default function compile(productions) {\n\treturn new Map(_compile(productions));\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/compile.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "compile",
    "memberof": "src/ll1/compile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ll1/compile.js~compile",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ll1/compile.js",
    "importStyle": "compile",
    "description": "Compiles the predictive parsing table for a grammar.\nCorresponds to Algorithm 4.31 in Dragon Book (2006) on page 224.",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Map}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "productions",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Map"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/ll1/follow.js",
    "content": "import {reversed} from '@iterable-iterator/reversed';\nimport first from './first.js';\n\n/**\n * Generate FOLLOW set for any rule given the FOLLOW sets for the nonterminals.\n *\n * @param {Map} FOLLOW\n * @param {Array} rule\n * @returns {Set}\n */\nexport default function follow(FOLLOW, rule) {\n\treturn first(FOLLOW, reversed(rule));\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/follow.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "follow",
    "memberof": "src/ll1/follow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ll1/follow.js~follow",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ll1/follow.js",
    "importStyle": "follow",
    "description": "Generate FOLLOW set for any rule given the FOLLOW sets for the nonterminals.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "FOLLOW",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "rule",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "src/ll1/from.js",
    "content": "import Parser from './Parser.js';\n\nexport default function from(grammar) {\n\treturn new Parser(grammar);\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/from.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "from",
    "memberof": "src/ll1/from.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ll1/from.js~from",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ll1/from.js",
    "importStyle": "from",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "grammar",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "src/ll1/index.js",
    "content": "import Parser from './Parser.js';\nimport _children_next_lazy from './_children_next_lazy.js';\nimport _compile from './_compile.js';\nimport _first from './_first.js';\nimport _follow from './_follow.js';\nimport _parse_lazy from './_parse_lazy.js';\nimport audit from './audit.js';\nimport compile from './compile.js';\nimport first from './first.js';\nimport follow from './follow.js';\nimport from from './from.js';\nimport is from './is.js';\nimport parse from './parse.js';\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default {\n\tParser,\n\t_children_next_lazy,\n\t_compile,\n\t_first,\n\t_follow,\n\t_parse_lazy,\n\taudit,\n\tcompile,\n\tfirst,\n\tfollow,\n\tfrom,\n\tis,\n\tparse,\n};\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/ll1/is.js",
    "content": "import {isEmpty} from '@iterable-iterator/cardinality';\n\nimport audit from './audit.js';\n\n/**\n * Check if grammar is ll(1).\n *\n * @param {Grammar} grammar\n * @returns {Boolean}\n */\nexport default function is(grammar) {\n\treturn isEmpty(audit(grammar));\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/is.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "is",
    "memberof": "src/ll1/is.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ll1/is.js~is",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ll1/is.js",
    "importStyle": "is",
    "description": "Check if grammar is ll(1).",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Grammar"
        ],
        "spread": false,
        "optional": false,
        "name": "grammar",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "src/ll1/parse.js",
    "content": "import _parse_lazy from './_parse_lazy.js';\n\n/**\n * Parse\n *\n * @param root\n * @param start\n * @param eof\n * @param productions\n * @param table\n * @param tape\n * @returns {Object}\n */\nexport default function parse(root, start, eof, productions, table, tape) {\n\tconst startRule = productions.get(root).get(start);\n\treturn _parse_lazy(eof, productions, table, startRule, tape, root, start);\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/ll1/parse.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "parse",
    "memberof": "src/ll1/parse.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ll1/parse.js~parse",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/ll1/parse.js",
    "importStyle": "parse",
    "description": "Parse",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "eof",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "productions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "table",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "tape",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "src/util/anyIterator.js",
    "content": "import Children from '../ast/Children.js';\n\nexport default function anyIterator(object) {\n\tif (object instanceof Children) return object.iterator;\n\tif (object[Symbol.asyncIterator]) return object[Symbol.asyncIterator]();\n\treturn object[Symbol.iterator]();\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/util/anyIterator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "anyIterator",
    "memberof": "src/util/anyIterator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/anyIterator.js~anyIterator",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/util/anyIterator.js",
    "importStyle": "anyIterator",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "src/util/index.js",
    "content": "import anyIterator from './anyIterator.js';\nimport setadd from './setadd.js';\nimport setaddall from './setaddall.js';\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default {\n\tanyIterator,\n\tsetadd,\n\tsetaddall,\n};\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/util/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "file",
    "name": "src/util/setadd.js",
    "content": "/**\n * Adds an element to a set and returns true if the set has changed.\n *\n * @param {Set<any>} set - The set to add to.\n * @param {any} element - The element to add to the set.\n * @returns {boolean} Whether <code>set</code> has changed.\n */\nexport default function setadd(set, element) {\n\tif (set.has(element)) return false;\n\tset.add(element);\n\treturn true;\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/util/setadd.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "function",
    "name": "setadd",
    "memberof": "src/util/setadd.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/setadd.js~setadd",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/util/setadd.js",
    "importStyle": "setadd",
    "description": "Adds an element to a set and returns true if the set has changed.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Whether <code>set</code> has changed."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Set<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "set",
        "description": "The set to add to."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The element to add to the set."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether <code>set</code> has changed."
    }
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "src/util/setaddall.js",
    "content": "import setadd from './setadd.js';\n\n/**\n * Adds all elements of an iterable to a set and returns true if the set has\n * changed.\n *\n * @param {Set<any>} set - The set to add to.\n * @param {Iterable<any>} iterable - The iterable of elements to add to the set.\n * @returns {boolean} Whether <code>set</code> has changed.\n */\nexport default function setaddall(set, iterable) {\n\tlet changed = false;\n\tfor (const element of iterable) {\n\t\tchanged = setadd(set, element) || changed;\n\t}\n\n\treturn changed;\n}\n",
    "static": true,
    "longname": "/home/runner/work/grammar/grammar/src/util/setaddall.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "setaddall",
    "memberof": "src/util/setaddall.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util/setaddall.js~setaddall",
    "access": "public",
    "export": true,
    "importPath": "@formal-language/grammar/src/util/setaddall.js",
    "importStyle": "setaddall",
    "description": "Adds all elements of an iterable to a set and returns true if the set has\nchanged.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Whether <code>set</code> has changed."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Set<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "set",
        "description": "The set to add to."
      },
      {
        "nullable": null,
        "types": [
          "Iterable<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "iterable",
        "description": "The iterable of elements to add to the set."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether <code>set</code> has changed."
    }
  },
  {
    "kind": "index",
    "content": ":fountain_pen: [@formal-language/grammar](https://formal-language.github.io/grammar)\n==\n\nGrammar compilation toolkit for JavaScript. Served with asynchronous goodness.\nSee [docs](https://formal-language.github.io/grammar/index.html).\n\n> :warning: Depending on your environment, the code may require\n> `regeneratorRuntime` to be defined, for instance by importing\n> [regenerator-runtime/runtime](https://www.npmjs.com/package/regenerator-runtime).\n\n```js\nconst G = grammar.from( { root , start , eof , productions } ) ;\nconst parser = ll1.from(G);\n```\n\n[![License](https://img.shields.io/github/license/formal-language/grammar.svg)](https://raw.githubusercontent.com/formal-language/grammar/main/LICENSE)\n[![Version](https://img.shields.io/npm/v/@formal-language/grammar.svg)](https://www.npmjs.org/package/@formal-language/grammar)\n[![Tests](https://img.shields.io/github/workflow/status/formal-language/grammar/ci:test?event=push&label=tests)](https://github.com/formal-language/grammar/actions/workflows/ci:test.yml?query=branch:main)\n[![Dependencies](https://img.shields.io/david/formal-language/grammar.svg)](https://david-dm.org/formal-language/grammar)\n[![Dev dependencies](https://img.shields.io/david/dev/formal-language/grammar.svg)](https://david-dm.org/formal-language/grammar?type=dev)\n[![GitHub issues](https://img.shields.io/github/issues/formal-language/grammar.svg)](https://github.com/formal-language/grammar/issues)\n[![Downloads](https://img.shields.io/npm/dm/@formal-language/grammar.svg)](https://www.npmjs.org/package/@formal-language/grammar)\n\n[![Code issues](https://img.shields.io/codeclimate/issues/formal-language/grammar.svg)](https://codeclimate.com/github/formal-language/grammar/issues)\n[![Code maintainability](https://img.shields.io/codeclimate/maintainability/formal-language/grammar.svg)](https://codeclimate.com/github/formal-language/grammar/trends/churn)\n[![Code coverage (cov)](https://img.shields.io/codecov/c/gh/formal-language/grammar/main.svg)](https://codecov.io/gh/formal-language/grammar)\n[![Code technical debt](https://img.shields.io/codeclimate/tech-debt/formal-language/grammar.svg)](https://codeclimate.com/github/formal-language/grammar/trends/technical_debt)\n[![Documentation](https://formal-language.github.io/grammar/badge.svg)](https://formal-language.github.io/grammar/source.html)\n[![Package size](https://img.shields.io/bundlephobia/minzip/@formal-language/grammar)](https://bundlephobia.com/result?p=@formal-language/grammar)\n",
    "longname": "/home/runner/work/grammar/grammar/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@formal-language/grammar\",\n  \"description\": \"Grammar compilation toolkit for JavaScript\",\n  \"version\": \"9.1.0\",\n  \"license\": \"AGPL-3.0\",\n  \"author\": \"make-github-pseudonymous-again\",\n  \"homepage\": \"https://formal-language.github.io/grammar\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/formal-language/grammar\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/formal-language/grammar/issues\"\n  },\n  \"keywords\": [\n    \"compilation\",\n    \"grammar\",\n    \"language\"\n  ],\n  \"sideEffects\": false,\n  \"type\": \"module\",\n  \"source\": \"src/index.js\",\n  \"main\": \"dist/index.cjs\",\n  \"module\": \"dist/index.module.js\",\n  \"esmodule\": \"dist/index.modern.js\",\n  \"umd:main\": \"dist/index.umd.js\",\n  \"unpkg\": \"dist/index.umd.js\",\n  \"exports\": {\n    \".\": {\n      \"browser\": \"./dist/index.module.js\",\n      \"umd\": \"./dist/index.umd.js\",\n      \"require\": \"./dist/index.cjs\",\n      \"default\": \"./dist/index.modern.js\"\n    }\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"scripts\": {\n    \"build\": \"NODE_ENV=production microbundle\",\n    \"build-docs\": \"esdoc\",\n    \"build-gh-pages\": \"npm run build-docs\",\n    \"ci:build\": \"npm run build\",\n    \"ci:test\": \"npm run lint-config && npm run lint && npm run cover\",\n    \"commit-msg\": \"commitlint --edit\",\n    \"cover\": \"NODE_ENV=cover c8 --all --src src --reporter lcov --reporter text-summary --reporter text npm test\",\n    \"debug\": \"NODE_ENV=debug npm run test -- -st --fail-fast\",\n    \"dev\": \"npm run lint-config-and-fix && npm run lint-and-fix && npm run cover -- -- -st --fail-fast\",\n    \"install-hooks\": \"husky install\",\n    \"lint\": \"xo\",\n    \"lint-and-fix\": \"npm run lint -- --fix\",\n    \"lint-config\": \"fixpack --dryRun\",\n    \"lint-config-and-fix\": \"fixpack || fixpack\",\n    \"postinstall\": \"npm run install-hooks\",\n    \"postpublish\": \"pinst --enable\",\n    \"precommit\": \"lint-staged\",\n    \"prepare\": \"npm run build\",\n    \"prepublishOnly\": \"pinst --disable\",\n    \"release\": \"np --message ':hatching_chick: release: Bumping to v%s.'\",\n    \"test\": \"ava\"\n  },\n  \"dependencies\": {\n    \"@iterable-iterator/cardinality\": \"^4.0.0\",\n    \"@iterable-iterator/chain\": \"^2.0.1\",\n    \"@iterable-iterator/filter\": \"^1.0.1\",\n    \"@iterable-iterator/iter\": \"^1.0.1\",\n    \"@iterable-iterator/list\": \"^1.0.1\",\n    \"@iterable-iterator/map\": \"^1.0.1\",\n    \"@iterable-iterator/next\": \"^2.0.1\",\n    \"@iterable-iterator/reduce\": \"^1.0.1\",\n    \"@iterable-iterator/reversed\": \"^1.0.0\",\n    \"@iterable-iterator/zip\": \"^1.0.1\"\n  },\n  \"devDependencies\": {\n    \"@async-abstraction/tape\": \"8.0.0\",\n    \"@babel/core\": \"7.16.0\",\n    \"@babel/preset-env\": \"7.16.4\",\n    \"@babel/register\": \"7.16.0\",\n    \"@commitlint/cli\": \"15.0.0\",\n    \"@iterable-iterator/range\": \"2.1.0\",\n    \"@iterable-iterator/repeat\": \"1.0.1\",\n    \"@iterable-iterator/sorted\": \"1.0.0\",\n    \"@js-library/commitlint-config\": \"0.0.4\",\n    \"@node-loader/babel\": \"2.0.0\",\n    \"@total-order/primitive\": \"1.0.1\",\n    \"ava\": \"4.0.0-rc.1\",\n    \"babel-plugin-transform-remove-console\": \"6.9.4\",\n    \"babel-plugin-unassert\": \"3.2.0\",\n    \"babel-preset-power-assert\": \"3.0.0\",\n    \"c8\": \"7.10.0\",\n    \"esdoc\": \"1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"1.0.0\",\n    \"esdoc-inject-script-plugin\": \"1.0.0\",\n    \"esdoc-inject-style-plugin\": \"1.0.0\",\n    \"esdoc-standard-plugin\": \"1.0.0\",\n    \"fixpack\": \"4.0.0\",\n    \"husky\": \"7.0.4\",\n    \"lint-staged\": \"12.1.2\",\n    \"microbundle\": \"0.14.2\",\n    \"np\": \"7.6.0\",\n    \"pinst\": \"2.1.6\",\n    \"power-assert\": \"1.6.1\",\n    \"xo\": \"0.47.0\"\n  },\n  \"ava\": {\n    \"files\": [\n      \"test/src/**/*\"\n    ],\n    \"nodeArguments\": [\n      \"--experimental-loader=@node-loader/babel\"\n    ],\n    \"timeout\": \"3m\"\n  },\n  \"babel\": {\n    \"sourceMaps\": true,\n    \"presets\": [\n      [\n        \"@babel/preset-env\",\n        {\n          \"bugfixes\": true,\n          \"modules\": false,\n          \"targets\": {\n            \"esmodules\": true\n          }\n        }\n      ]\n    ],\n    \"plugins\": [\n      [\n        \"transform-remove-console\",\n        {\n          \"exclude\": [\n            \"log\",\n            \"error\",\n            \"warn\"\n          ]\n        }\n      ]\n    ],\n    \"env\": {\n      \"debug\": {\n        \"sourceMaps\": \"both\",\n        \"presets\": [\n          \"babel-preset-power-assert\"\n        ],\n        \"plugins\": [\n          [\n            \"transform-remove-console\",\n            {\n              \"exclude\": [\n                \"debug\",\n                \"log\",\n                \"error\",\n                \"warn\"\n              ]\n            }\n          ]\n        ]\n      },\n      \"test\": {\n        \"sourceMaps\": \"both\",\n        \"presets\": [\n          \"babel-preset-power-assert\"\n        ]\n      },\n      \"cover\": {\n        \"sourceMaps\": \"both\",\n        \"presets\": [\n          \"babel-preset-power-assert\"\n        ]\n      },\n      \"development\": {\n        \"presets\": [\n          [\n            \"@babel/preset-env\",\n            {\n              \"targets\": [\n                \"defaults\",\n                \"maintained node versions\"\n              ]\n            }\n          ],\n          \"babel-preset-power-assert\"\n        ]\n      },\n      \"production\": {\n        \"presets\": [\n          [\n            \"@babel/preset-env\",\n            {\n              \"targets\": [\n                \"defaults\",\n                \"maintained node versions\"\n              ]\n            }\n          ]\n        ],\n        \"plugins\": [\n          \"babel-plugin-unassert\"\n        ]\n      }\n    }\n  },\n  \"lint-staged\": {\n    \"*.js\": [\n      \"npm run lint-and-fix\"\n    ],\n    \"package.json\": [\n      \"npm run lint-config-and-fix\"\n    ]\n  },\n  \"prettier\": {\n    \"trailingComma\": \"all\"\n  },\n  \"xo\": {\n    \"prettier\": true,\n    \"plugins\": [\n      \"unicorn\"\n    ],\n    \"rules\": {\n      \"unicorn/filename-case\": \"off\",\n      \"camelcase\": \"off\",\n      \"unicorn/prevent-abbreviations\": \"off\",\n      \"no-constant-condition\": \"off\",\n      \"unicorn/prefer-math-trunc\": \"off\",\n      \"unicorn/no-new-array\": \"off\",\n      \"unicorn/prefer-node-protocol\": \"off\",\n      \"no-negated-condition\": \"off\"\n    },\n    \"overrides\": [\n      {\n        \"files\": [\n          \"doc/**\"\n        ],\n        \"env\": \"browser\"\n      }\n    ]\n  }\n}\n",
    "longname": "/home/runner/work/grammar/grammar/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": null,
    "longname": "",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/grammar/grammar/doc/manual/overview.md",
    "name": "./doc/manual/overview.md",
    "content": "# Overview\n\n```js\nimport { grammar , ll1 } from '@formal-language/grammar' ;\nimport * as tape from '@async-abstraction/tape' ;\n\nconst root = 'root' ;\nconst start = 'start' ;\nconst eof = '$' ;\nconst productions = { 'root' : { 'start' : [ ... , '=$' ] } , ... } ;\n\nconst G = grammar.from( { root , start , eof , productions } ) ; // Grammar Object\n\nll1.is(G); // true\n\nconst parser = ll1.from(G); // Parser Object\n\nconst replace = async input => {\n\n    const tokens = tape.fromString( ... ) ; // create tokens from string `input`\n\n    const tree = parser.parse( tokens ) ; // root of parsed tree\n\n    const transformed = await ast.transform( tree , ... ) ; // root of transformed tree\n\n    const flattened = ast.flatten( transformed ) ; // async generator of leaves\n\n    const chunks = asyncIterableMap( leaf => leaf.buffer , flattened ) ; // async generator of strings\n\n    const output = tape.fromAsyncIterable( chunks ) ; // tape of chunks\n\n    return await tape.toString( output ) ; // chunks concatenation\n\n} ;\n\nreplace('010101').then( output => console.log(output) ) ; // 'ababab'\n```\n\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/grammar/grammar/doc/manual/installation.md",
    "name": "./doc/manual/installation.md",
    "content": "# Installation\n\nCan be managed using\n[yarn](https://yarnpkg.com/en/docs),\n[npm](https://docs.npmjs.com),\nor [jspm](https://jspm.org/docs).\n\n\n### yarn\n```terminal\nyarn add @formal-language/grammar\n```\n\n### npm\n```terminal\nnpm install @formal-language/grammar --save\n```\n\n### jspm\n```terminal\njspm install npm:@formal-language/grammar\n```\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/grammar/grammar/doc/manual/usage.md",
    "name": "./doc/manual/usage.md",
    "content": "# Usage\n\n> :warning: Depending on your environment, the code may require\n> `regeneratorRuntime` to be defined, for instance by importing\n> [regenerator-runtime/runtime](https://www.npmjs.com/package/regenerator-runtime).\n\nFirst, require the polyfill at the entry point of your application\n```js\nawait import( 'regenerator-runtime/runtime.js' ) ;\n// or\nimport 'regenerator-runtime/runtime.js' ;\n```\n\nThen, import the library where needed\n```js\nconst grammarToolkit = await import( '@formal-language/grammar' ) ;\n// or\nimport { ast , error , grammar , ll1 , util } from '@formal-language/grammar' ;\n```\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/grammar/grammar/doc/manual/example.md",
    "name": "./doc/manual/example.md",
    "content": "# Examples\n\n> More examples in [the test files](https://github.com/formal-language/grammar/tree/main/test/src).\n\n\n## A convoluted `'010101'.replace(/0/g, 'a').replace(/1/g, 'b')`.\n\n```js\nimport {map} from '@iterable-iterator/map';\nimport {enumerate} from '@iterable-iterator/zip';\nimport * as tape from '@async-abstraction/tape' ;\nimport {asyncIterableMap} from '@async-abstraction/tape';\nimport { grammar , ll1 , ast } from '@formal-language/grammar' ;\n\nconst G = grammar.from( {\n\t\"root\" : \"root\" ,\n\t\"start\" : \"start\" ,\n\t\"eof\" : \"$\" ,\n\t\"productions\" : {\n\t\t\"root\" : {\n\t\t\t\"start\" : [ \"&bits\" , \"=$\" ]\n\t\t} ,\n\t\t\"bits\" : {\n\t\t\t\"add\" : [ \"&bit\" , \"&bits\" ] ,\n\t\t\t\"end\" : [ ] ,\n\t\t} ,\n\t\t\"bit\" : [\n\t\t\t[ \"=0\" ] ,\n\t\t\t[ \"=1\" ] ,\n\t\t] ,\n\t} ,\n} ) ;\n\nconst parser = ll1.from(G);\n\nconst replace = async input => {\n\n\tconst tokens = tape.fromIterable(\n\t\tmap(\n\t\t\t( [ i , a ] ) => ({\n\t\t\t\t\"type\" : \"leaf\" ,\n\t\t\t\t\"terminal\" : a ,\n\t\t\t\t\"buffer\" : a ,\n\t\t\t\t\"position\" : i ,\n\t\t\t}) ,\n\t\t\tenumerate( input )\n\t\t)\n\t) ;\n\n\tconst tree = parser.parse(tokens);\n\n\tconst m = ( children , match , ctx ) => ast.map( async child => child.type === 'leaf' ? child : await ast.transform( child , match , ctx ) , children ) ;\n\n\tconst transform = {\n\t\t\"root\" : {\n\t\t\t\"start\" : ( tree , match ) => ({\n\t\t\t\t\"type\" : \"node\" ,\n\t\t\t\t\"nonterminal\" : \"root\" ,\n\t\t\t\t\"production\" : \"start\" ,\n\t\t\t\t\"children\" : m( tree.children , match ) ,\n\t\t\t}) ,\n\t\t} ,\n\t\t\"bits\" : {\n\t\t\t\"add\" : ( tree , match ) =>  ({\n\t\t\t\t\"type\" : \"node\" ,\n\t\t\t\t\"nonterminal\" : \"letters\" ,\n\t\t\t\t\"production\" : \"yetanotherletter\" ,\n\t\t\t\t\"children\" : m( tree.children , match ) ,\n\t\t\t}) ,\n\t\t\t\"end\" : ( ) =>  ({\n\t\t\t\t\"type\" : \"node\" ,\n\t\t\t\t\"nonterminal\" : \"letters\" ,\n\t\t\t\t\"production\" : \"done\" ,\n\t\t\t\t\"children\" : [ ] ,\n\t\t\t}) ,\n\t\t} ,\n\t\t\"bit\" : [\n\t\t\ttree => ({\n\t\t\t\t\"type\" : \"node\" ,\n\t\t\t\t\"nonterminal\" : \"letter\" ,\n\t\t\t\t\"production\" : \"aaa\" ,\n\t\t\t\t\"children\" : ast.map( leaf => ({\n\t\t\t\t\t\"type\" : \"leaf\" ,\n\t\t\t\t\t\"terminal\" : \"a\" ,\n\t\t\t\t\t\"buffer\" : \"a\" ,\n\t\t\t\t\t\"position\" : leaf.position ,\n\t\t\t\t}) , tree.children ) ,\n\t\t\t}) ,\n\t\t\ttree => ({\n\t\t\t\t\"type\" : \"node\" ,\n\t\t\t\t\"nonterminal\" : \"letter\" ,\n\t\t\t\t\"production\" : \"bbb\" ,\n\t\t\t\t\"children\" : ast.map( leaf => ({\n\t\t\t\t\t\"type\" : \"leaf\" ,\n\t\t\t\t\t\"terminal\" : \"b\" ,\n\t\t\t\t\t\"buffer\" : \"b\" ,\n\t\t\t\t\t\"position\" : leaf.position ,\n\t\t\t\t}) , tree.children ) ,\n\t\t\t}) ,\n\t\t] ,\n\t} ;\n\n\tconst transformed = await ast.transform( tree , transform ) ;\n\n\tconst flattened = ast.flatten( transformed ) ;\n\n\tconst chunks = asyncIterableMap( leaf => leaf.buffer , flattened ) ;\n\n\tconst output = tape.fromAsyncIterable( chunks ) ;\n\n\treturn await tape.toString( output ) ;\n\n} ;\n\nreplace('010101').then( output => console.log(output) ) ; // 'ababab'\n\n```\n",
    "static": true,
    "access": "public"
  }
]